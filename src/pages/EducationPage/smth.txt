// with timer
// import { useEffect, useState } from "react";

// function EducationPage() {
//   const [data, setData] = useState<string[]>([]);
//   const CACHE_KEY = "educationPageData";
//   const CACHE_EXPIRATION = 1 * 60 * 1000; 

//   useEffect(() => {
//     const fetchData = async () => {
//       const cached = localStorage.getItem(CACHE_KEY);
//       const now = new Date().getTime();

//       if (cached) {
//         const { timestamp, values } = JSON.parse(cached);

//         if (now - timestamp < CACHE_EXPIRATION) {
//           setData(values);
//           console.log("Loaded from cache");
//           return;
//         }
//       }

//       const sheetId = import.meta.env.VITE_GOOGLE_SHEET_ID;
//       const apiKey = import.meta.env.VITE_GOOGLE_API_KEY;
//       const range = "EducationPage!A2:A7";

//       const url = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${range}?key=${apiKey}`;
//       const response = await fetch(url);
//       const result = await response.json();

//       const values = result.values?.flat() || [];
//       setData(values);

//       localStorage.setItem(
//         CACHE_KEY,
//         JSON.stringify({
//           timestamp: now,
//           values,
//         })
//       );

//       console.log("Fetched from API and cached");
//     };

//     fetchData();

//     const interval = setInterval(fetchData, CACHE_EXPIRATION);

//     return () => clearInterval(interval);
//   }, []);

//   return (
//     <>
//       <h2>Hi! EducationPage</h2>
//       {data.map((item, index) => (
//         <p key={index}>{item}</p>
//       ))}
//     </>
//   );
// }

// export default EducationPage;

// without timer

// try 2 to get info from g.s.
// import { useEffect, useState } from "react";
// import MoreInfoBtn from "../../components/MoreInfoBtn/MoreInfoBtn";
// import introText from "./intro.md?raw";
// import ReactMarkdown from "react-markdown";
// import { FaChevronLeft } from "react-icons/fa";
// import YourAreHere from "../../components/YourAreHere/YouAreHere";
// import { 
//   ArrowButton, 
//   ButtonGrid, 
//   IntroWrapper, 
//   SloganText,
//   MainInfoContainer,
//   FotoContainer,
//   TextContainer,

// } from "./styles";

// function EducationPage() {
//   const [data, setData] = useState<string[]>([]);
//   const [data1, setData1] = useState<string[]>([]);
//   const CACHE_KEY = "educationPageData";

//   useEffect(() => {
//     const cached = localStorage.getItem(CACHE_KEY);
//     if (cached) {
//       const { values } = JSON.parse(cached);
//       setData(values);
//       // console.log("‚úÖ Downloaded from cache");
//     }

//     const fetchData = async () => {
//       try {
//         const sheetId = import.meta.env.VITE_GOOGLE_SHEET_ID;
//         const apiKey = import.meta.env.VITE_GOOGLE_API_KEY;
//         const range = "EducationPage!A2:A10";

//         const url = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${range}?key=${apiKey}`;
//         const response = await fetch(url);
//         const result = await response.json();

//         const values = result.values?.flat() || [];
//         setData(values);

//         localStorage.setItem(
//           CACHE_KEY,
//           JSON.stringify({
//             timestamp: new Date().getTime(),
//             values,
//           })
//         );

//         // console.log("üåê Updated from API and saved to cache");
//       } catch (error) {
//         console.error("Error by loading:", error);
//       }
//     };

//     fetchData();
//   }, []);

//   useEffect(() => {
//   const cached = localStorage.getItem(CACHE_KEY);
//   if (cached) {
//     const { values } = JSON.parse(cached);
//     setData1(values);
//     // console.log("‚úÖ Downloaded from cache");
//   }

//   const fetchData = async () => {
//     try {
//       const sheetId = import.meta.env.VITE_GOOGLE_SHEET_ID;
//       const apiKey = import.meta.env.VITE_GOOGLE_API_KEY;
//       const range = "EducationPage!A15"; 

//       const url = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${range}?key=${apiKey}`;
//       const response = await fetch(url);
//       const result = await response.json();

//       const values = result.values?.flat() || [];
//       setData1(values); 

//       localStorage.setItem(
//         CACHE_KEY,
//         JSON.stringify({
//           timestamp: new Date().getTime(),
//           values,
//         })
//       );

//       // console.log("üåê Updated from API and saved to cache");
//     } catch (error) {
//       console.error("Error by loading:", error);
//     }
//   };

//   fetchData();
// }, []);


//   return (
//     <>
//         <YourAreHere /> 
        
//         <IntroWrapper>
//           <ReactMarkdown>{introText}</ReactMarkdown>
//         </IntroWrapper>

//         <ButtonGrid>
//           {data.map((item, index) => (
//             <MoreInfoBtn key={index} title={item} />
//           ))}
//         </ButtonGrid>

//         <ArrowButton onClick={() => (window.location.href = "/")}>
//           <FaChevronLeft /> Zur vorherigen Seite
//         </ArrowButton>
 
//        <div>
//           <SloganText> Ein liebevoller Ort zum Spielen, Lernen und Wachsen
//           </SloganText>
//           <MainInfoContainer>
//             <FotoContainer>Photo</FotoContainer>
//             <TextContainer>Text</TextContainer>
//           </MainInfoContainer>
//           <div>
//             Gallery
//           </div>

//           <IntroWrapper>
//           {data1.length > 0 && <ReactMarkdown>{data1[0]}</ReactMarkdown>}
//         </IntroWrapper>

//        </div>
//     </>
//   );
// }

// export default EducationPage;


import { useEffect, useState } from "react";
import MoreInfoBtn from "../../components/MoreInfoBtn/MoreInfoBtn";
import introText from "./intro.md?raw";
import ReactMarkdown from "react-markdown";
import { FaChevronLeft } from "react-icons/fa";
import YourAreHere from "../../components/YourAreHere/YouAreHere";
import {
  ArrowButton,
  ButtonGrid,
  IntroWrapper,
  SloganText,
  MainInfoContainer,
  FotoContainer,
  TextContainer,
} from "./styles";
import Priklad from "./Priklad";

function EducationPage() {
  const [data, setData] = useState<string[]>([]);
  const [data1, setData1] = useState<string[]>([]);
  const [isEditing, setIsEditing] = useState(false);
  const [editedText, setEditedText] = useState("");
  const CACHE_KEY = "educationPageData";

  // –ó–∞–≥–∞–ª—å–Ω–∏–π —Ç–µ–∫—Å—Ç
  useEffect(() => {
    const fetchData = async () => {
      try {
        const sheetId = import.meta.env.VITE_GOOGLE_SHEET_ID;
        const apiKey = import.meta.env.VITE_GOOGLE_API_KEY;
        const range = "EducationPage!A2:A10";

        const url = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${range}?key=${apiKey}`;
        const response = await fetch(url);
        const result = await response.json();

        const values = result.values?.flat() || [];
        setData(values);
      } catch (error) {
        console.error("Error by loading:", error);
      }
    };

    fetchData();
  }, []);

  // Markdown A15
  useEffect(() => {
    const fetchData = async () => {
      try {
        const sheetId = import.meta.env.VITE_GOOGLE_SHEET_ID;
        const apiKey = import.meta.env.VITE_GOOGLE_API_KEY;
        const range = "EducationPage!A2:B2";

        const url = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${range}?key=${apiKey}`;
        const response = await fetch(url);
        const result = await response.json();

        const values = result.values?.flat() || [];
        setData1(values);
        setEditedText(values[0] || "");
      } catch (error) {
        console.error("Error loading B2:", error);
      }
    };

    fetchData();
  }, []);

  const handleSave = async () => {
    try {
      const sheetId = import.meta.env.VITE_GOOGLE_SHEET_ID;
      const apiKey = import.meta.env.VITE_GOOGLE_API_KEY;
      const range = "EducationPage!A15";

      const url = `https://sheets.googleapis.com/v4/spreadsheets/${sheetId}/values/${range}?valueInputOption=RAW&key=${apiKey}`;

      const body = {
        range,
        majorDimension: "ROWS",
        values: [[editedText]],
      };

      const response = await fetch(url, {
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(body),
      });

      if (!response.ok) throw new Error("Failed to update sheet");
      const result = await response.json();
      console.log("‚úÖ Updated:", result);
      setIsEditing(false);
      setData1([editedText]);
    } catch (error) {
      console.error("‚ùå Save error:", error);
    }
  };

  return (
    <>
      <YourAreHere />

      <IntroWrapper>
        <ReactMarkdown>{introText}</ReactMarkdown>
      </IntroWrapper>

      <ButtonGrid>
        {data.map((item, index) => (
          <MoreInfoBtn key={index} title={item} />
        ))}
      </ButtonGrid>

      <ArrowButton onClick={() => (window.location.href = "/")}>
        <FaChevronLeft /> Zur vorherigen Seite
      </ArrowButton>

      <div>
        <SloganText>
          Ein liebevoller Ort zum Spielen, Lernen und Wachsen
        </SloganText>

        <MainInfoContainer>
          <FotoContainer>Photo</FotoContainer>
          <TextContainer>Text</TextContainer>
        </MainInfoContainer>

        <div>Gallery</div>

        <IntroWrapper>
          {isEditing ? (
            <>
              <textarea
                style={{ width: "100%", height: "200px" }}
                value={editedText}
                onChange={(e) => setEditedText(e.target.value)}
              />
              <br />
              <button onClick={handleSave}>üíæ –ó–±–µ—Ä–µ–≥—Ç–∏</button>
              <button onClick={() => setIsEditing(false)}>‚ùå –°–∫–∞—Å—É–≤–∞—Ç–∏</button>
            </>
          ) : (
            <>
              <ReactMarkdown>{data1[0]}</ReactMarkdown>
              <button onClick={() => setIsEditing(true)}>‚úèÔ∏è –†–µ–¥–∞–≥—É–≤–∞—Ç–∏</button>
            </>
          )}
        </IntroWrapper>
      </div>

      <Priklad />
    </>
  );
}

export default EducationPage;


// first try to get all from md 1 File

// import { useState } from "react";
// import MoreInfoBtn from "../../components/MoreInfoBtn/MoreInfoBtn";


// import kitaDe from "./Kita/kitaDe.md?raw";
// import schuleDe from "./Grundschule/schuleDe.md?raw";
// import bibliotekDe from "./MiniBibliotek/bibliotekDe.md?raw";

// import ReactMarkdown from "react-markdown";
// import { FaChevronLeft } from "react-icons/fa";
// import YourAreHere from "../../components/YourAreHere/YouAreHere";
// import { ArrowButton, ButtonGrid, IntroWrapper } from "./styles";
// import CardInfo from "../../components/CardInfo/CardInfo";

// import rawMd from './text.md?raw';

// function EducationPage() {
//   const [data] = useState<{ name: string; slogan: string }[]>([
//     { name: "Kita", slogan: "Ein liebevoller Ort zum Spielen, Lernen und Wachsen" },
//     { name: "Grundschule", slogan: "Klein, famili√§r und voller Lernfreude" },
//     { name: "Mini - Bibliotek", slogan: "Lesefreude zum Mitnehmen ‚Äì von Nachbarn f√ºr Nachbarn" },
//   ]);

//   // Grundschule - Lernen, wachsen und die Welt entdecken
//   // Bibliotek - Ein Ort der Geschichten und Fantasie

//   const extractSection = (text: string, startMarker: string, endMarker: string) => {
//   const regex = new RegExp(`<!-- ${startMarker} -->([\\s\\S]*?)<!-- ${endMarker} -->`, 'm');
//   const match = text.match(regex);
//   return match ? match[1].trim() : '';
// };

// // –ø—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è

// const introText = extractSection(rawMd, 'INTRO_TEXT_START', 'INTRO_TEXT_END');
// const separateText = extractSection(rawMd, 'SEPARATE_TEXT_START', 'SEPARATE_TEXT_END');

// const kitaName = extractSection(rawMd, 'KITA_NAME_START', 'KITA_NAME_END');
// const kitaSlogan = extractSection(rawMd, 'KITA_SLOGAN_START', 'KITA_SLOGAN_END');
// const kitaText = extractSection(rawMd, 'KITA_TEXT_START', 'KITA_TEXT_END');

// const schuleName = extractSection(rawMd, 'GRUNDSCHULE_NAME_START', 'GRUNDSCHULE_NAME_END');
// const schuleSloga = extractSection(rawMd, 'GRUNDSCHULE_SLOGAN_START', 'GRUNDSCHUL_SLOGANE_END');
// const schuleText = extractSection(rawMd, 'GRUNDSCHULE_TEXT_START', 'GRUNDSCHULE_TEXT_END');

// const miniBbibliotekName = extractSection(rawMd, 'MINIBIBLIOTEK_NAME_START', 'MINIBIBLIOTEK_NAME_END');
// const miniBbibliotekSloga = extractSection(rawMd, 'MINIBIBLIOTEK_SLOGAN_START', 'MINIBIBLIOTEK_SLOGANE_END');
// const miniBbibliotekText = extractSection(rawMd, 'MINIBIBLIOTEK_TEXT_START', 'MINIBIBLIOTEK_TEXT_END');

//   return (
//     <>

//       <YourAreHere />

//       <IntroWrapper>
//         <ReactMarkdown>{introText}</ReactMarkdown>
//       </IntroWrapper>

//       <ButtonGrid>
//         {data.map((item, index) => (
//           <MoreInfoBtn key={index} title={item.name} />
//         ))}
//       </ButtonGrid>

//       <IntroWrapper>
//         <ReactMarkdown>{separateText}</ReactMarkdown>
//       </IntroWrapper>

//       {/* <ArrowButton onClick={() => (window.location.href = "/")}>
//         <FaChevronLeft /> Zur vorherigen Seite
//       </ArrowButton> */}

//       {/* –ü–µ—Ä–µ–¥–∞—î–º–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è –¥–ª—è –∫–æ–∂–Ω–æ—ó –∫–∞—Ä—Ç–∫–∏ */}
//       <CardInfo mainText={kitaDe} slogan={data[0].slogan} />
//       <CardInfo mainText={schuleDe} slogan={data[1].slogan} />
//       <CardInfo mainText={bibliotekDe} slogan={data[2].slogan} />

//       <ArrowButton onClick={() => (window.location.href = "/")}>
//         <FaChevronLeft /> Zur vorherigen Seite
//       </ArrowButton>
//     </>
//   );
// }

// export default EducationPage;